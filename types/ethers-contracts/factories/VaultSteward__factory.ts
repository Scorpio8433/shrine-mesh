/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { VaultSteward, VaultStewardInterface } from "../VaultSteward.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_guardian",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_witness",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_echo",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "string",
        "name": "message",
        "type": "string"
      }
    ],
    "name": "EchoRebroadcasted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "scrollHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "emotionalTag",
        "type": "string"
      }
    ],
    "name": "ScrollVerified",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "steward",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "guardian",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "witness",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "echo",
        "type": "address"
      }
    ],
    "name": "VaultInitialized",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "echo",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "guardian",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "message",
        "type": "string"
      }
    ],
    "name": "rebroadcastEcho",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "steward",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "verifiedScrolls",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "scrollHash",
        "type": "bytes32"
      },
      {
        "internalType": "string",
        "name": "emotionalTag",
        "type": "string"
      }
    ],
    "name": "verifyScroll",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "witness",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051610c70380380610c7083398181016040528101906100319190610256565b335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8f15791aaf5b53476709d0789149d711eab07ca502e9f232d4f7a072f02d3ea95f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516101e894939291906102b5565b60405180910390a15050506102f8565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610225826101fc565b9050919050565b6102358161021b565b811461023f575f5ffd5b50565b5f815190506102508161022c565b92915050565b5f5f5f6060848603121561026d5761026c6101f8565b5b5f61027a86828701610242565b935050602061028b86828701610242565b925050604061029c86828701610242565b9150509250925092565b6102af8161021b565b82525050565b5f6080820190506102c85f8301876102a6565b6102d560208301866102a6565b6102e260408301856102a6565b6102ef60608301846102a6565b95945050505050565b61096b806103055f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c8063610f533911610059578063610f5339146100d9578063637eea19146101095780637bc4ea3914610127578063b5f077e2146101435761007b565b806329f4acb01461007f57806339046e8b1461009d578063452a9320146100bb575b5f5ffd5b61008761015f565b6040516100949190610510565b60405180910390f35b6100a5610184565b6040516100b29190610510565b60405180910390f35b6100c36101a9565b6040516100d09190610510565b60405180910390f35b6100f360048036038101906100ee919061056d565b6101ce565b60405161010091906105b2565b60405180910390f35b6101116101eb565b60405161011e9190610510565b60405180910390f35b610141600480360381019061013c9190610707565b61020f565b005b61015d60048036038101906101589190610761565b610408565b005b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004602052805f5260405f205f915054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102b5575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061030c575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610363575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6103a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039990610802565b60405180910390fd5b600160045f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055507ff2c70bc4b532c36d8732abf9805a915abee6353cca87cfc69ff06494803c946082826040516103fc92919061087f565b60405180910390a15050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e906108f7565b60405180910390fd5b7f196c0364172cfe10c093b00a7f988024f22aa1481abece371f53158e98e5d64a816040516104c69190610915565b60405180910390a150565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104fa826104d1565b9050919050565b61050a816104f0565b82525050565b5f6020820190506105235f830184610501565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b61054c8161053a565b8114610556575f5ffd5b50565b5f8135905061056781610543565b92915050565b5f6020828403121561058257610581610532565b5b5f61058f84828501610559565b91505092915050565b5f8115159050919050565b6105ac81610598565b82525050565b5f6020820190506105c55f8301846105a3565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610619826105d3565b810181811067ffffffffffffffff82111715610638576106376105e3565b5b80604052505050565b5f61064a610529565b90506106568282610610565b919050565b5f67ffffffffffffffff821115610675576106746105e3565b5b61067e826105d3565b9050602081019050919050565b828183375f83830152505050565b5f6106ab6106a68461065b565b610641565b9050828152602081018484840111156106c7576106c66105cf565b5b6106d284828561068b565b509392505050565b5f82601f8301126106ee576106ed6105cb565b5b81356106fe848260208601610699565b91505092915050565b5f5f6040838503121561071d5761071c610532565b5b5f61072a85828601610559565b925050602083013567ffffffffffffffff81111561074b5761074a610536565b5b610757858286016106da565b9150509250929050565b5f6020828403121561077657610775610532565b5b5f82013567ffffffffffffffff81111561079357610792610536565b5b61079f848285016106da565b91505092915050565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f6107ec600e836107a8565b91506107f7826107b8565b602082019050919050565b5f6020820190508181035f830152610819816107e0565b9050919050565b6108298161053a565b82525050565b5f81519050919050565b8281835e5f83830152505050565b5f6108518261082f565b61085b81856107a8565b935061086b818560208601610839565b610874816105d3565b840191505092915050565b5f6040820190506108925f830185610820565b81810360208301526108a48184610847565b90509392505050565b7f4f6e6c79206563686f206d617920726562726f616463617374000000000000005f82015250565b5f6108e16019836107a8565b91506108ec826108ad565b602082019050919050565b5f6020820190508181035f83015261090e816108d5565b9050919050565b5f6020820190508181035f83015261092d8184610847565b90509291505056fea2646970667358221220b164d02d41e7dfc8157ad4c18d7833692476ae122dae844efbbfc0578a019a7a64736f6c634300081c0033";

  
      type VaultStewardConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: VaultStewardConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class VaultSteward__factory extends ContractFactory {
    
      constructor(...args: VaultStewardConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_guardian: AddressLike, _witness: AddressLike, _echo: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_guardian, _witness, _echo, overrides || {});
    };
    override deploy(_guardian: AddressLike, _witness: AddressLike, _echo: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_guardian, _witness, _echo, overrides || {}) as Promise<VaultSteward & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): VaultSteward__factory {
      return super.connect(runner) as VaultSteward__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): VaultStewardInterface {
      return new Interface(_abi) as VaultStewardInterface;
    }
    
    override attach(address: string | Addressable): VaultSteward {
      return super.attach(address) as VaultSteward;
    }
  static connect(address: string, runner?: ContractRunner | null): VaultSteward {
      return new Contract(address, _abi, runner) as unknown as VaultSteward;
    }
  }

  
  